<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	
	<!-- 
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/font/**" location="/resources/font/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/lib/**" location="/resources/lib/" />
	<resources mapping="/pic/**" location="/resources/pic/" />
	 -->
	 <resources mapping="/resources/**" location="/resources/" />
	 <resources mapping="/reviewimg/**" location="/WEB-INF/reviewimg/, classpath=/WEB-INF/reviewimg/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"></beans:property>
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="xyz.itwill.dao" />
	<context:component-scan base-package="xyz.itwill.service" />
	<context:component-scan base-package="xyz.itwill.serviceImpl" />
	<context:component-scan base-package="xyz.itwill.controller" />
	
	
		<!-- 인터셉터 클래스를 Spring Bean으로 등록 -->
	<beans:bean class="session.AdminAuthInterceptor" id="adminAuthInterceptor"/>
	<beans:bean class="session.LoginAuthInterceptor" id="loginAuthInterceptor"/>
	
	<!-- interceptors : 인터셉터를 설정하기 위한 상위 엘리먼트 -->
	<interceptors>
		<!-- interceptor : 인터셉터를 등록하기 위한 엘리먼트 -->
		<interceptor>
			<!-- mapping : 인터셉터가 동작될 요청 URL 주소의 패턴을 등록하는 엘리먼트 -->
			<!-- path 속성 : 요청 URL 주소의 패턴을 속성값으로 설정 -->
			<mapping path="/admin"/>
			<mapping path="/admin/*"/>
			<!-- ref : 클라이언트 요청에 의해 동작될 인터셉터 클래스의 Spring Bean를 설정하는 엘리먼트 -->
			<!-- bean 속성 : 인터셉터 클래스의 beanName를 속성값으로 설정 -->
			<beans:ref bean="adminAuthInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/users/modify"/>
			<mapping path="/users/modify_confirm"/>
			<mapping path="/users/delete"/>
			<mapping path="/mypage/main"/>
			<mapping path="/rc_rev*"/>
			<mapping path="/mypage/rsvnList"/>
			<beans:ref bean="loginAuthInterceptor"/> 
		</interceptor>
	</interceptors>
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"> 
		<beans:property name="maxUploadSize" value="20971520"/> 
		<beans:property name="defaultEncoding" value="utf-8"/> 
	</beans:bean>
	
</beans:beans>
